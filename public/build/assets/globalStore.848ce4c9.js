import{bg as i}from"./main.a51c163a.js";import{a as d}from"./axios.b8bb8a35.js";const l=[{endpoint:"total-query-count",property:"totalQueryCount"},{endpoint:"avg-response-end-time",property:"avgResponseEndTime"},{endpoint:"avg-response-start-time",property:"avgResponseStartTime"},{endpoint:"avg-query-input-word",property:"avgQueryInputWord"},{endpoint:"avg-query-output-word",property:"avgQueryOutputWord"},{endpoint:"total-conversation-count",property:"totalConversationCount"},{endpoint:"avg-query-per-conversation",property:"avgQueryPerConversation"},{endpoint:"avg-time-per-conversation",property:"avgTimePerConversation"},{endpoint:"userlocation",property:"userLocation"},{endpoint:"barchart-users",property:"barchartUsers"},{endpoint:"barchart-source",property:"barchartSource"},{endpoint:"barchart-browsers",property:"barchartBrowsers"},{endpoint:"barchart-query-status",property:"barchartQueryStatus"},{endpoint:"total-query-hourly",property:"totalQueryHourly"},{endpoint:"total-query-daily",property:"totalQueryDaily"}],a=[{endpoint:"daily-breakdown-query",property:"dailyBreakdownQuery"},{endpoint:"daily-breakdown-response-start-time",property:"dailyBreakdownResponseStartTime"},{endpoint:"daily-breakdown-response-end-time",property:"dailyBreakdownResponseEndTime"},{endpoint:"daily-breakdown-input-word",property:"dailyBreakdownInputWord"},{endpoint:"daily-breakdown-output-word",property:"dailyBreakdownOutputWord"},{endpoint:"daily-breakdown-conversations",property:"dailyBreakdownConversations"},{endpoint:"daily-breakdown-query-per-conversation",property:"dailyBreakdownQueryPerConversation"},{endpoint:"daily-breakdown-conversation-time",property:"dailyBreakdownConversationTime"}],y=i("globalStore",{state:()=>({currentSelectedDailyBreakdown:0,dateRange:"",totalQueryCount:null,avgResponseEndTime:null,avgResponseStartTime:null,avgQueryInputWord:null,avgQueryOutputWord:null,totalConversationCount:null,avgQueryPerConversation:null,avgTimePerConversation:null,dailyBreakdownQuery:null,dailyBreakdownResponseStartTime:null,dailyBreakdownResponseEndTime:null,dailyBreakdownInputWord:null,dailyBreakdownOutputWord:null,dailyBreakdownConversations:null,dailyBreakdownQueryPerConversation:null,dailyBreakdownConversationTime:null,userLocation:null,barchartUsers:null,barchartSource:null,barchartBrowsers:null,barchartQueryStatus:null,totalQueryHourly:null,totalQueryDaily:null}),actions:{setDateRange(e){this.dateRange=e},setTotalQueryCount(e){this.totalQueryCount=e},setAvgResponseEndTime(e){this.avgResponseEndTime=e},setAvgResponseStartTime(e){this.avgResponseStartTime=e},setAvgQueryInputWord(e){this.avgQueryInputWord=e},setAvgQueryOutputWord(e){this.avgQueryOutputWord=e},setTotalConversationCount(e){this.totalConversationCount=e},setAvgQueryPerConversation(e){this.avgQueryPerConversation=e},setAvgTimePerConversation(e){this.avgTimePerConversation=e},setDailyBreakdownQuery(e){this.dailyBreakdownQuery=e},setDailyBreakdownResponseStartTime(e){this.dailyBreakdownResponseStartTime=e},setDailyBreakdownResponseEndTime(e){this.dailyBreakdownResponseEndTime=e},setDailyBreakdownInputWord(e){this.dailyBreakdownInputWord=e},setDailyBreakdownOutputWord(e){this.dailyBreakdownOutputWord=e},setDailyBreakdownConversations(e){this.dailyBreakdownConversations=e},setDailyBreakdownQueryPerConversation(e){this.dailyBreakdownQueryPerConversation=e},setDailyBreakdownConversationTime(e){this.dailyBreakdownConversationTime=e},setUserLocation(e){this.userLocation=e},setBarchartUsers(e){this.barchartUsers=e},setBarchartSource(e){this.barchartSource=e},setBarchartBrowsers(e){this.barchartBrowsers=e},setBarchartQueryStatus(e){this.barchartQueryStatus=e},setTotalQueryHourly(e){this.totalQueryHourly=e},setTotalQueryDaily(e){this.totalQueryDaily=e},setcurrentSelectedDailyBreakdown(e){this.currentSelectedDailyBreakdown=e},cancelAllApiCalls(){source.cancel("Request canceled")},fetchDataFromApi(e,o){let t;if(this.dateRange=="")t="?showall=true";else{const[r,s]=this.dateRange.split(" to ");t=`?start=${r}&end=${s}`}const n=`/analytics/${e}${t}`;d.get(n).then(r=>{},r=>{debugger}).catch(r=>{console.error(error)})},fetchAllData(){this.fetchDataFromApi(a[this.currentSelectedDailyBreakdown].endpoint,a[this.currentSelectedDailyBreakdown].property);for(const{endpoint:e,property:o}of l)this.fetchDataFromApi(e,o)}}});export{y as u};
